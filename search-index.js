var searchIndex = JSON.parse('{\
"pow_sha256":{"doc":"MCaptch’s SHA256 based Proof of Work library","t":[3,3,4,3,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5],"n":["Config","ConfigBuilder","ConfigBuilderError","PoW","PoWBuilder","PoWBuilderError","UninitializedField","UninitializedField","ValidationError","ValidationError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","calculate","calculate_serialized","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","dev","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","is_sufficient_difficulty","is_valid_proof","ne","ne","nonce","nonce","prove_work","prove_work_serialized","result","result","salt","salt","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","score"],"q":["pow_sha256","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pow_sha256::ConfigBuilderError","","pow_sha256::PoWBuilderError","","pow_sha256::dev"],"d":["Configuration for generting proof of work Please choose a …","Builder for <code>Config</code>.","Error type for ConfigBuilder","Proof of Work over concrete type T. T can be any type that …","Builder for <code>PoW</code>.","Error type for PoWBuilder","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","","","","","","","","","","","","","Builds a new <code>PoW</code>.","Builds a new <code>Config</code>.","Calculate the PoW score with the provided input T.","Calculate the PoW score of an already serialized T and …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the PoW result is of sufficient difficulty","Verifies that the PoW is indeed generated out of the …","","","","","Create Proof of Work over item of type T.","Create Proof of Work on an already serialized item of type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,1,2,3,4,1,5,6,2,3,4,1,5,6,2,4,6,5,5,3,4,5,6,3,4,5,6,4,6,3,5,0,3,5,3,1,1,5,2,2,3,4,1,1,1,5,6,2,2,2,3,4,1,5,6,2,5,5,3,5,4,3,5,5,4,3,6,5,3,5,3,4,5,6,1,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,2,7,8,9,10,0],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["pow",3],["powbuildererror",4]]]],[[["",0]],["result",4,[["config",3],["configbuildererror",4]]]],[[["",0],["pow",3],["",0]],["result",6,[["u128",0]]]],[[["",0],["pow",3]],["u128",0]],[[["",0]],["pow",3]],[[["",0]],["powbuilder",3]],[[["",0]],["config",3]],[[["",0]],["configbuilder",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[],["result",4]],[[],["result",4]],null,[[["",0],["pow",3]],["bool",0]],[[["",0],["config",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["uninitializedfielderror",3]]],[[["string",3]]],[[]],[[]],[[]],[[["string",3]]],[[]],[[["uninitializedfielderror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["pow",3],["u32",0]],["bool",0]],[[["",0],["pow",3],["",0]],["bool",0]],[[["",0],["pow",3]],["bool",0]],[[["",0],["config",3]],["bool",0]],[[["",0],["u64",0]],["",0]],null,[[["",0],["",0],["u32",0]],["result",6,[["pow",3]]]],[[["",0],["u32",0]],["pow",3]],[[["",0],["string",3]],["",0]],null,[[["",0],["string",3]],["",0]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["sha256",6],["u64",0]],["u128",0]]],"p":[[4,"PoWBuilderError"],[4,"ConfigBuilderError"],[3,"PoW"],[3,"PoWBuilder"],[3,"Config"],[3,"ConfigBuilder"],[13,"UninitializedField"],[13,"ValidationError"],[13,"UninitializedField"],[13,"ValidationError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};